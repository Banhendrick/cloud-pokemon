# Etapas de compilación
steps:
  # Actualiza los submódulos de Git en su proyecto
  - name: gcr.io/cloud-builders/git
    args: ['submodule', 'update', '--init']
  # Compila la imagen Docker y la etiqueta con el valor $COMMIT_SHA
  - name: gcr.io/cloud-builders/docker
    args: ['build', '-t', 'gcr.io/fc-labs-pro-lab2/pokemon-nginx:app', '-f', 'Dockerfile', '.']
  # Sube la imagen de Nginx recién creada a Google Container Registry
  - name: gcr.io/cloud-builders/docker
    args: ['push', 'gcr.io/fc-labs-pro-lab2/pokemon-nginx:app']
  # Compila la imagen Docker de Helm
  - name: gcr.io/cloud-builders/docker
    args: ['build', '-t', 'gcr.io/fc-labs-pro-lab2/pokemon-helm:latest', '-f', 'helm/Dockerfile', '.']
  # Sube la imagen de Helm recién creada a Google Container Registry
  - name: gcr.io/cloud-builders/docker
    args: ['push', 'gcr.io/fc-labs-pro-lab2/pokemon-helm:latest']
  # Actualiza el helm release en su clúster de Kubernetes
  - name: gcr.io/cloud-builders/kubectl
    args:
      - 'apply'
      - '-f'
      - 'nginx-chart/templates/deployment.yaml'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=europe-southwest1-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=gke-pokemon'
  - name: gcr.io/fc-labs-pro-lab2/helm
    #entrypoint: /bin/sh
    args: ['-c', 'helm upgrade pokemon nginx-chart --namespace default --set image.tag=app']
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=europe-southwest1-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=gke-pokemon'
# Imágenes a ser creadas por la etapa de compilación
images:
  - gcr.io/fc-labs-pro-lab2/pokemon-nginx:app
  - gcr.io/fc-labs-pro-lab2/helm
